import BetimModel from "../model/betim/betim-model.js";

let betim = new BetimModel();
let contentFrameWebview;
let betimTextInput;
let barUrlInput;
let messagePane;
let toastContainer;

let barTextInputButton;
let barSpeechInputButton;


window.onload = () => {
    // TODO: On page loaded activites
    document.querySelector("#load-btn").addEventListener('click', loadWebviewUrlAction);
    document.querySelector("#bar-text-input-btn").addEventListener('click', toggleBetimTextInput);

    contentFrameWebview = document.querySelector("#content-frame-webview");
    betimTextInput = document.querySelector("#betim-text-input");
    barUrlInput = document.querySelector("#bar-url-input");
    messagePane = document.querySelector("#message-pane");
    toastContainer = document.querySelector("#toast-container");

    console.log("Browser window is loaded.");
}

/**
 * Load given URL into the webview
 */
function loadWebviewUrlAction(){
    let userInput = barUrlInput.value;
    contentFrameWebview.src = userInput;
    console.log("Load web page: ", userInput.value);
    // Add spinners
    showAlertMessage("Page loading", "success");
}

/**
 * Apply BETİM text input action
 * Get user input from betim text input then 
 * apply the CSS code to the webpage which is 
 * generated by BETİM model.
 */
function applyBetimTextInputAction() {
    let userInput = betimTextInput.value;
    betim.evalText(userInput).then((result) => { 
        // Insert generated css
        contentFrameWebview.insertCSS(result);
        // Show sucess dialog
    }).catch(() => {
        // Alert dialog implementation
    });
}

function showAlertMessage(message, className) {
    toastContainer.innerHTML += `<div class="toast-card toast-card-${className}">${message}</div>`;
    
    setTimeout(() => {
        document.querySelector(".toast-card").remove();
    }, 2000);
}

/**
 * Toggles betim text input dialog visibility.
 */
function toggleBetimTextInput() {
    let textPromptCotainer = document.querySelector(".text-prompt-container");
    let classNames = textPromptCotainer.classList;
    if (classNames.contains("invisible")) {
        // TODO: Animate
        textPromptCotainer.classList.remove("invisible");
    } else {
        textPromptCotainer.classList.add("invisible");
    }
}